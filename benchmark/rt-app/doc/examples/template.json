{
	/*
	 * Simple use case which creates 10% load
	 * for 6 seconds.
	 * A "sleep" : 0 has been added so the file can be used by tune_json.py to
	 * use a sleep event instead of the timer. In this latter case, you need
	 * to set the timer's period to 0
	 */
	"tasks" : {
		/* no 'loop' value at task level means loop indefinitely (-1) */
		"thread0" : {
			"instance" : 1,  /* number of threads to be created */
			"loop" : -1,  /* loop forever (see 'duration' below) */

			"run" :   10000,  /* create load [us]: when awaken,
				execute `floor (10000*1000 / pLoad[ns])` loops */

			"sleep" : 0, /* sleep 0s - which is somewhat useless */

			"timer" : { "ref" : "unique", "period" : 100000 }
			/* wake up thread every 100000 us */
		}
	},
	"global" : {
		"duration" : 6,  /* run for a maximum of 6s total */
		"calibration" : "CPU0",   /* calibrate on CPU0 */
		"default_policy" : "SCHED_OTHER",
		"pi_enabled" : false,
		"lock_pages" : false,
		"logdir" : "./",
		"log_basename" : "rt-app2",
		"gnuplot" : true
	}
}
